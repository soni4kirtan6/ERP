@page
@model ConfigPortal.Pages.ValidationPageModel
@{
    ViewData["Title"] = "ValidationPage";
}

<div class="name" style="font-size:23px; color:#736AFF; font-weight:bold; text-align:center;">2) Add Validation to each Field</div>
<form method="POST" name="tableMappingForm">
    @foreach (var table in Model.dbstructure.Properties())
    {
        string tableName = table.Name.ToString();
        <h2>Table : @table.Name</h2>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col"><h3>Column Name</h3></th>
                    <th scope="col">Validation Configurations</th>
                </tr>
            </thead>
            @foreach (var col in table.Value)
            {
                int i = 0;

                string colName=col.ToString();
                <tbody>
                    <tr>
                        <th scope="row">@colName</th>
                        <td>
                            <div>
                                @tableName-@colName-@i
                                <div class="validation" id="@tableName-@colName-@i">
                                    <h4 class="val-no" id="val_no-@tableName-@colName-0">Validation @(i + 1):</h4><br />

                                    <label>Type of Validation:</label>

                                    <select class="form-control type-sel" id="type_sel-@tableName-@colName-0">
                                        <option>CanBeEmpty</option>
                                        <option>Maxlength</option>
                                        <option>MinLength</option>
                                        <option>RegEx</option>
                                        <option>Static List</option>
                                    </select>
                                    <br />
                                    <label>Value :</label>
                                    <input class="input--style-5 valu-" placeholder="Enter Value" type="text" id="value-@tableName-@colName-0"><br />
                                    <label>ErrorOrWarning :</label>
                                    <input class="input--style-5 e-w" placeholder="e/w" type="text" id="E_W-@tableName-@colName-0"><br />
                                    <br />
                                </div>
                            </div>
                            <button class="btn btn-info" type="button" onclick="duplicate('@tableName-@colName')">ADD ONE MORE</button>
                        </td>
                    </tr>
                </tbody>
            }
            <tbody>
                <tr>
                    <th scope="row">person_info</th>
                    <td><input class="input--style-5" type="text" /></td>
                </tr>
            </tbody>
        </table>
    }
    <div>
        <button class="btn btn--radius-2 btn--red m-t-30" type="submit" asp-page="#">Save & Next</button>
        @*<label class="label--desc" style="margin-top:10px; margin-left:25px" asp-for="ConStr">@Model.ConStr</label>*@
    </div>
</form>

<script>
    //var i = 0;
    var colCount = {};
    function duplicate(col) {
        if (colCount[col] == undefined) {
            colCount[col] = 0;
        }
            //alert(colCount[col]);
        var original = document.getElementById(col + "-" + colCount[col]);
        var clone = original.cloneNode(true); // "deep" clone

        var valNo = clone.getElementsByClassName("val-no")[0];
        var typeSel = clone.getElementsByClassName("type-sel")[0];
        var value = clone.getElementsByClassName("valu-")[0];
        var e_w = clone.getElementsByClassName("e-w")[0];

        colCount[col] = colCount[col] + 1;

        clone.id = col + "-" +colCount[col]; // there can only be one element with an ID
        valNo.innerText = "Validation " + (colCount[col] + 1)+":";
        typeSel.id = "type_sel-" + col + "-" + colCount[col];
        value.id = "value-" + col + "-" +colCount[col];
        e_w.id = "E_W-" + col + "-" + colCount[col];

        clone.onclick = duplicate; // event handlers are not cloned
        original.parentNode.appendChild(clone);
        
    }
</script>